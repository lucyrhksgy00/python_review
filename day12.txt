Day12

1. Class(Cont'd)
(1) 클래스의 변수
    1) 인스턴스 변수 (인스턴스 = 객체; 클래스와의 관계를 표현할 때 인스턴스라고 함)
       인스턴스 별로 다른 변수
       self.name과 같이 self.가 붙은 변수
    2) 클래스 변수
       클래스 내부에 선언된 변수
       모든 인스턴스가 공유하는 변수
       self가 붙지 않음

(2) 생성자(Constructor)
    인스턴스가 만들어질 때 무조건 호출되는 함수
    메서드명은 __init__(self)
    인자(파라미터) 부분을 수정하면 수정한 대로만 생성해야 함
    같은 이름으로 생성하면 마지막 것으로 overwrite

(3) DocString
    클래스의 설명문
    클래스 선언 아래에 """~"""
    다른 곳에서 클래스명.__doc__로 참조 가능

(4) self
    메서드(self, param1, param2)의 경우 실제 파라미터는 2개
    호출할 때 인스턴스명.메서드로 호출하라는 의미

2. 예외 처리
(1) 예외(Exception)
    오류인데, 개발자가 처리 가능한 오류
    처리 불가능한 오류(Ex 문법오류, OOM-Out of Memory)는 그냥 오류, Error

(2) 사례
    0으로 나눗셈을 하려는 경우
    a = int(input("나누어지는 수를 입력하세요"))
    b = int(input("나눌 수를 입력하세요"))

    if b == 0:
       print("0으로 나누는 것은 안됩니다.")
    else:
       c = a / b

    위와 같이 해결할 경우 모든 상황을 내가 다 알아야 처리 가능

(3) 예외는 클래스로 관리되며
    모든 예외는 BaseException을 상속받으며, Exception에 대부분의 예외가 포함

(4) 예외 처리 방식
    try:
        실행할 문장
    except 예외명 as e:
        예외명에 해당하는 예외가 발생했을 때 처리할 문장
    .
    .
    .
    except Exception:
        기타 예외 발생 시 처리 영역
    else:
        예외가 나지 않으면 수행하는 부분
    finally:
        예외가 나든 안나든 무조건 수행되는 부분

(5) 강제로 예외 발생시키기
    파이썬이 내는 오류가 아니라 사용자가 발생시키고 싶을 경우
    raise 예외클래스   # 예외클래스는 Exception 또는 Exception을 상속받은 나의 클래스
    or
    raise 예외클래스("문장")
