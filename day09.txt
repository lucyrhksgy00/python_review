Day09

1. 전역(global) 변수와 지역(local) 변수
(1) Argument(인수), Value(값), Parameter(전달값)
    Beatles = 50
    Test(Beatles)         Test(50)         def Test(BTS):
                                               print(BTS)

    Beatles = 100
    Test(Beatles)         Test(100)        def Test(Beatles):   # 'Beatles'는 로컬 변수
                                               print(Beatles)
                                               Beatles = 200
    print(Beatles) => 100이 나오는데 왜 100?

(2) 전역변수와 지역변수의 차이점
    프로그램에서 변수를 사용할 수 있는 영역이 존재

    전역변수 : global이라고 하며, 어디에서든 사용 가능
    지역변수 : local이라고 하며, 함수 내에서만 사용 가능

    전역변수 : 함수 내에서 시작되지 않은 모든 변수
    지역변수 : 함수 내에서 시작된 변수

    * 함수 내에서 사용한 변수는 함수를 나가는 순간 소멸
    * 함수 내에서 전역변수와 동일한 이름을 사용하더라도 지역변수

(3) 함수 내에서 전역변수를 사용하는 방법
    1) global 전역변수명을 선언한다.
    2) globals()['전역변수명']으로 사용한다.

(4) 함수에만 적용된다.
    조건문, 반복문 안에 있는 변수는 외부에서 사용 가능

2. 표준 모듈 소개
(1) random : 무작위 숫자
    random.randint(1, 10) : 1부터 10까지의 정수 중 하나
    random.randrange(1, 10, 2) : 1부터 10까지의 홀수 중 하나
    random.random() : 0~1 사이의 실수(소수)
    random.choice(집합객체) : 집합객체 중 임의의 1개를 반환
    random.sample(집합객체, n) : 집합객체 중 임의의 n개를 반환

(2) math : 수학 관련
    math.pi : 원주율
    math.ceil() : 올림
    math.floor() : 내림, 3.4 => 3, -10.3 => -11
    math.trunc() : 소수점 이하 삭제, 3.4 => 3, -10.3 => -10

(3) time : 시간 관련
    time.time() : 현재 시간, 1970년 1월 1일 0시 0분 0초를 기준으로 몇 초
    t1 = time.time()
    수행 로직
    t2 = time.time()
    t2 - t1 : 수행 로직에 걸린 시간

    time.sleep() : 입력한 초만큼 중지

3. 파일 입출력
(1) 기본 사용법
    파일변수(f) = open(파일명, 옵션)
    f를 활용하여 로직 처리
    f.close()

(2) 파일명
    open('sample.txt')
    open('C:/sample.txt')
    open('./txt/sample.txt')
    open('../../sample.txt')

(3) 옵션
    r : 읽기모드, 없으면 이거
    w : 쓰기모드, 파일이 없으면 만듦, 있으면 덮어씀
    a : 쓰기모드, 파일이 없으면 만듦, 있으면 맨 뒤에 이어서 씀
    x : 쓰기모드, 파일이 없으면 만듦, 있으면 오류냄

    t : 텍스트 모드, 우리 눈에 읽힘
    b : 바이너리 모드, 음성, 이미지 등 데이터

(4) 쓰기
    실습파일 참조

(5) 읽기
    1) read(사이즈)
       사이즈를 생략하면 다 읽음
       파일의 끝에 도달하면 ''을 return

    2) readline()
       한 줄씩 읽어들이는 함수
       파일의 끝에 도달하면 ''을 return

    3) readlines(숫자)
       이번 줄을 끝까지 읽으면 저 숫자를 넘어가게 돼!!!
       그러면 이번 줄까지만 읽어야지
       결과는 list로 각 줄을 요소로 return